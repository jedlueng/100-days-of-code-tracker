#Created by Jedsada Luengaramsuk 16/03/2021
#With automated boring stuff with python book

- Use python to create, read and save files on the hardrive 

Files and FIle Paths 
- Filename e.g. project.docx
- Path e.g. C:\Users\jedsada\Documents.  (Get in to folders/directories)
    - C:\ = window style root 

{FIle-hierachy.png}

Backslash on Windows > Forward Slash on OS X and Linux 
- On windows paths = \ (Backslashes)
- OSX and Linux = / (Forward slash)


os.path.join() 
> strip that return a string with a file with the correct path

Linix, mac and windows would be different 
_____________________________
#This script change tuple to a string with the right file path

import os 

os.path.join('usr', 'bin', 'spam')

'usr\\bin\\spam'
_____________________________

os.path.join() is helpful when you need to create string for filenames 




____________________________________
#joins name from a list of ile names to the end of a folder's name

import os 


myFiles = ['accounts.txt', 'details.csv', 'invite.docx']

for filename in myFiles: 
    print(os.path.join('C:\\Users\\asweigart', filename))

C:\Users\asweigart\accounts.txt
C:\Users\asweigart\details.csv
C:\Users\asweigart\invite.docx

__________________________________


The Current Working Directory 
- Current working directory = cwd 
- get it by 
- os.getcwd() 

import os 

os.getcwd() 
#This will print current working directory 

Change directory 
os.chdir(path)

_____________________________
import os 

#get working directory 
od.getcwd() 

#change working directory
os.getcwd(path)

#Show working directory again 
os.getcwd() 



ABSOLUTE vs RELATIVE PATH 

- absolute path > begins with the root folder 
- relative path > relative to the program's current working directory 

{relativevsabsolute}

.\ > go forth 
..\ > go back 



{Today stop at page 176 > Creating New Folders with os.makedirs()}


What I learned 
os.path.join()
os.getcwd(path)
Absolute vs relative 





Creating New Folders with os.makedirs() 

os.makedirs() 

_____________________________

import os 

#Create folders on this path 
os.makedirs(''C:\\delicious\\walnut\\waffles')


{walnut}




The os.path Module 
- related to filenames and file paths 
- http://docs.python.org/3/library/os.path.html.



Handling Absolute and Relative Paths 
- os.path.abspath(path) > return a string of the absolute path into an absolute one 
- os.path.isabs(path) > return TRUE if argument is an absolute path 
- os.path.relpath(path,start) > return a string of relative path from start to ppath 
- os.path.dirname() > return a string of everything that comes before the last slash in the path argument 
- os.path.basename(path) > return a string that comes after the last slash 


{os.path}

{os.path.relpath}


Page 178 date 25/03/2021


26/03/2021

os.path.dirname(path) return a string of everything that comes before the last slash in the path argument

{basename-dirname}

{basename-dirname-example}


To combine path name and base name together 

> os.path.split() 

{os.path.split-example}





_____________________________
Finding File Sizes and Folder Contents 

- Gather info about files and folders 

- os.path.getsize(path) > return the size in bytes 
- os.listdir(path) > show filename in strings for each file (same as ls)


{getsize-listdir-example}



Find the total size of all files in this directory 
- use os.path.getsize() and os.listdir() together 

{gettotalsize}

- loop each file name 
- use os.path.join to join path with filename 
- combine everything in total size 



_____________________________
Checking Path Validity 
- to check path and prevent error 
- os.path.exists(path) > return TRUE if files exist 
- os.path.isfile(path) > return True if path argument exist and is a file 
- os.path.isdir(path) > return True if the path argument exists and is a folder


{os.path.check}


_____________________________

THe File Reading/writing Process 
- apply to plain text file 
- shelve module 
- open() > return a file object 
- read() write() on the file object 
- close() on the file object 




[page181 after one pomodoro > quite fast huh 13.56]


Open() > open file 

- open(path)
- can put absolute or relative path 
- returns a File object 
- Creating hello.txt 
{openhello}
- This will open a file in reading plain text mode 
- When you want to read and write  > you need to call hello 



_____________________________
Reading the Contents of Files 






